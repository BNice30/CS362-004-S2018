        -:    0:Source:testme.c
        -:    0:Graph:testme.gcno
        -:    0:Data:testme.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include<stdio.h>
        -:    2:#include<string.h>
        -:    3:#include<stdlib.h>
        -:    4:#include<time.h>
        -:    5:
function inputChar called 1748840 returned 100% blocks executed 100%
  1748840:    6:char inputChar()
        -:    7:{
        -:    8:    // TODO: rewrite this function
        -:    9:    time_t t;
        -:   10:    char c;
  1748840:   11:    char d[]={'[','(','{',' ', 'a', 'x','}',')',']'};
  1748840:   12:    int min= 0;
  1748840:   13:    int max= 9; 
  1748840:   14:    srand((unsigned) time(&t));
call    0 returned 100%
call    1 returned 100%
        -:   15:    
        -:   16:	
        -:   17:     
  1748840:   18:    return d[min + rand() % (max+1-min)];
call    0 returned 100%
        -:   19:}
        -:   20:
function inputString called 1748840 returned 100% blocks executed 100%
  1748840:   21:char *inputString()
        -:   22:{
        -:   23:    // TODO: rewrite this function
  1748840:   24:    char *s="reset\0";
        -:   25:    
        -:   26:     
  1748840:   27:    return s;
        -:   28:}
        -:   29:
function testme called 1 returned 0% blocks executed 100%
        1:   30:void testme()
        -:   31:{
        1:   32:  int tcCount = 0;
        -:   33:  char *s;
        -:   34:  char c;
        1:   35:  int state = 0;
        -:   36:  while (1)
        -:   37:  {
  1748840:   38:    tcCount++;
  1748840:   39:    c = inputChar();
call    0 returned 100%
  1748840:   40:    s = inputString();
call    0 returned 100%
  1748840:   41:    printf("Iteration %d: c = %c, s = %s, state = %d\n", tcCount, c, s, state);
call    0 returned 100%
        -:   42:
  1748840:   43:    if (c == '[' && state == 0) state = 1;
branch  0 taken 4% (fallthrough)
branch  1 taken 96%
branch  2 taken 1% (fallthrough)
branch  3 taken 99%
  1748840:   44:    if (c == '(' && state == 1) state = 2;
branch  0 taken 14% (fallthrough)
branch  1 taken 86%
branch  2 taken 1% (fallthrough)
branch  3 taken 99%
  1748840:   45:    if (c == '{' && state == 2) state = 3;
branch  0 taken 7% (fallthrough)
branch  1 taken 93%
branch  2 taken 1% (fallthrough)
branch  3 taken 99%
  1748840:   46:    if (c == ' '&& state == 3) state = 4;
branch  0 taken 11% (fallthrough)
branch  1 taken 89%
branch  2 taken 1% (fallthrough)
branch  3 taken 99%
  1748840:   47:    if (c == 'a' && state == 4) state = 5;
branch  0 taken 11% (fallthrough)
branch  1 taken 89%
branch  2 taken 1% (fallthrough)
branch  3 taken 99%
  1748840:   48:    if (c == 'x' && state == 5) state = 6;
branch  0 taken 18% (fallthrough)
branch  1 taken 82%
branch  2 taken 1% (fallthrough)
branch  3 taken 99%
  1748840:   49:    if (c == '}' && state == 6) state = 7;
branch  0 taken 19% (fallthrough)
branch  1 taken 81%
branch  2 taken 1% (fallthrough)
branch  3 taken 99%
  1748840:   50:    if (c == ')' && state == 7) state = 8;
branch  0 taken 8% (fallthrough)
branch  1 taken 92%
branch  2 taken 1% (fallthrough)
branch  3 taken 99%
  1748840:   51:    if (c == ']' && state == 8) state = 9;
branch  0 taken 9% (fallthrough)
branch  1 taken 91%
branch  2 taken 1% (fallthrough)
branch  3 taken 99%
  1748840:   52:    if (s[0] == 'r' && s[1] == 'e'
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
branch  2 taken 100% (fallthrough)
branch  3 taken 0%
  1748840:   53:       && s[2] == 's' && s[3] == 'e'
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
branch  2 taken 100% (fallthrough)
branch  3 taken 0%
  1748840:   54:       && s[4] == 't' && s[5] == '\0'
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
branch  2 taken 100% (fallthrough)
branch  3 taken 0%
  1748840:   55:       && state == 9)
branch  0 taken 1% (fallthrough)
branch  1 taken 99%
        -:   56:    {
        1:   57:      printf("error ");
call    0 returned 100%
        1:   58:      exit(200);
call    0 returned 0%
        -:   59:    }
  1748839:   60:  }
        -:   61:}
        -:   62:
        -:   63:
function main called 1 returned 0% blocks executed 80%
        1:   64:int main(int argc, char *argv[])
        -:   65:{
        1:   66:    srand(time(NULL));
call    0 returned 100%
call    1 returned 100%
        1:   67:    testme();
call    0 returned 0%
    #####:   68:    return 0;
        -:   69:}
